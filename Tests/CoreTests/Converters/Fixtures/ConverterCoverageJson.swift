//
//  ConverterCoverageJson.swift
//  
//
//  Created by Thibault Wittemberg on 2020-07-04.
//

let converterFixtureCoverageJson = """
{"coveredLines":661,"lineCoverage":0.9924924924924925,"targets":[{"coveredLines":172,"lineCoverage":1,"files":[{"coveredLines":17,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/FeedbackLoopTests/TestReducer.swift","functions":[{"coveredLines":6,"lineCoverage":1,"lineNumber":9,"executionCount":25,"name":"static FeedbackLoopTests.TestReducer.reducer(state: FeedbackLoopTests.TestState, event: FeedbackLoopTests.TestEvent) -> FeedbackLoopTests.TestState","executableLines":6},{"coveredLines":11,"lineCoverage":1,"lineNumber":16,"executionCount":25,"name":"static FeedbackLoopTests.TestReducer.reduceNextEvent(from: FeedbackLoopTests.TestState) -> FeedbackLoopTests.TestState","executableLines":11}],"name":"TestReducer.swift","executableLines":17},{"coveredLines":155,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/FeedbackLoopTests/FeedbackLoopIntegrationTests.swift","functions":[{"coveredLines":1,"lineCoverage":1,"lineNumber":13,"executionCount":3,"name":"variable initialization expression of FeedbackLoopTests.FeedbackLoopIntegrationTests.(subscriptions in _F7C74F052D2F841D215039F3597350AB) : Swift.Set<Combine.AnyCancellable>","executableLines":1},{"coveredLines":6,"lineCoverage":1,"lineNumber":15,"executionCount":31,"name":"variable initialization expression of FeedbackLoopTests.FeedbackLoopIntegrationTests.effectA : (FeedbackLoopTests.TestState) -> Combine.AnyPublisher<FeedbackLoopTests.TestEvent, Swift.Never>","executableLines":6},{"coveredLines":6,"lineCoverage":1,"lineNumber":22,"executionCount":30,"name":"variable initialization expression of FeedbackLoopTests.FeedbackLoopIntegrationTests.effectB : (FeedbackLoopTests.TestState) -> Combine.AnyPublisher<FeedbackLoopTests.TestEvent, Swift.Never>","executableLines":6},{"coveredLines":6,"lineCoverage":1,"lineNumber":29,"executionCount":28,"name":"variable initialization expression of FeedbackLoopTests.FeedbackLoopIntegrationTests.effectC : (FeedbackLoopTests.TestState) -> Combine.AnyPublisher<FeedbackLoopTests.TestEvent, Swift.Never>","executableLines":6},{"coveredLines":32,"lineCoverage":1,"lineNumber":36,"executionCount":1,"name":"FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_stateOrderIsRespected() -> ()","executableLines":32},{"coveredLines":6,"lineCoverage":1,"lineNumber":57,"executionCount":7,"name":"closure #1 (FeedbackLoopTests.TestState) -> () in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_stateOrderIsRespected() -> ()","executableLines":6},{"coveredLines":1,"lineCoverage":1,"lineNumber":66,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":66,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":31,"lineCoverage":1,"lineNumber":69,"executionCount":1,"name":"FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_withAdd_stateOrderIsRespected() -> ()","executableLines":31},{"coveredLines":6,"lineCoverage":1,"lineNumber":89,"executionCount":7,"name":"closure #1 (FeedbackLoopTests.TestState) -> () in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_withAdd_stateOrderIsRespected() -> ()","executableLines":6},{"coveredLines":1,"lineCoverage":1,"lineNumber":98,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_withAdd_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":98,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_withAdd_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":45,"lineCoverage":1,"lineNumber":101,"executionCount":1,"name":"FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":45},{"coveredLines":1,"lineCoverage":1,"lineNumber":106,"executionCount":8,"name":"closure #1 (FeedbackLoopTests.TestState) -> () in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":3,"lineCoverage":1,"lineNumber":107,"executionCount":1,"name":"closure #2 () -> Combine.AnyPublisher<FeedbackLoopTests.TestEvent, Swift.Never> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":3},{"coveredLines":6,"lineCoverage":1,"lineNumber":135,"executionCount":14,"name":"closure #3 (FeedbackLoopTests.TestState) -> () in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":6},{"coveredLines":1,"lineCoverage":1,"lineNumber":144,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":144,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopTests.TestState> in FeedbackLoopTests.FeedbackLoopIntegrationTests.test_execute_withIncrementalStateInMultipleSideEffect_uiEvent_stateOrderIsRespected() -> ()","executableLines":1}],"name":"FeedbackLoopIntegrationTests.swift","executableLines":155}],"name":"FeedbackLoopTests.xctest","executableLines":172,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/FeedbackLoopTests.xctest/FeedbackLoopTests"},{"coveredLines":79,"lineCoverage":0.98750000000000004,"files":[{"coveredLines":45,"lineCoverage":0.97826086956521741,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Sources/FeedbackLoop/SideEffects.swift","functions":[{"coveredLines":10,"lineCoverage":1,"lineNumber":14,"executionCount":9,"name":"static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(_: (A) -> Combine.AnyPublisher<B, Swift.Never>, with: FeedbackLoop.ExecutionStrategy) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":10},{"coveredLines":7,"lineCoverage":0.875,"lineNumber":15,"executionCount":9,"name":"closure #1 (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never> in static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(_: (A) -> Combine.AnyPublisher<B, Swift.Never>, with: FeedbackLoop.ExecutionStrategy) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":8},{"coveredLines":13,"lineCoverage":1,"lineNumber":28,"executionCount":4,"name":"static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(from: (A) -> (), combinedWith: Combine.AnyPublisher<B, Swift.Never>) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":13},{"coveredLines":8,"lineCoverage":1,"lineNumber":29,"executionCount":4,"name":"closure #1 (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never> in static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(from: (A) -> (), combinedWith: Combine.AnyPublisher<B, Swift.Never>) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":8},{"coveredLines":4,"lineCoverage":1,"lineNumber":32,"executionCount":14,"name":"closure #1 (A) -> Combine.AnyPublisher<B, Swift.Never> in closure #1 (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never> in static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(from: (A) -> (), combinedWith: Combine.AnyPublisher<B, Swift.Never>) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":4},{"coveredLines":3,"lineCoverage":1,"lineNumber":37,"executionCount":4,"name":"closure #2 (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never> in static FeedbackLoop.SideEffects.transform<A, B where A: FeedbackLoop.State, B: FeedbackLoop.Event>(from: (A) -> (), combinedWith: Combine.AnyPublisher<B, Swift.Never>) -> (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>","executableLines":3}],"name":"SideEffects.swift","executableLines":46},{"coveredLines":34,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Sources/FeedbackLoop/FeedbackLoop.swift","functions":[{"coveredLines":4,"lineCoverage":1,"lineNumber":24,"executionCount":12,"name":"FeedbackLoop.FeedbackLoop.init(with: Swift.Array<(Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>>, reducedBy: (A, B) -> A) -> FeedbackLoop.FeedbackLoop<A, B>","executableLines":4},{"coveredLines":3,"lineCoverage":1,"lineNumber":29,"executionCount":10,"name":"FeedbackLoop.FeedbackLoop.add(sideEffect: (Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>) -> ()","executableLines":3},{"coveredLines":16,"lineCoverage":1,"lineNumber":35,"executionCount":6,"name":"FeedbackLoop.FeedbackLoop.execute(initialState: A, on: __C.OS_dispatch_queue) -> Combine.AnyPublisher<A, Swift.Never>","executableLines":16},{"coveredLines":5,"lineCoverage":1,"lineNumber":38,"executionCount":6,"name":"closure #1 (Combine.CurrentValueSubject<A, Swift.Never>) -> Combine.Publishers.MergeMany<Combine.AnyPublisher<B, Swift.Never>> in FeedbackLoop.FeedbackLoop.execute(initialState: A, on: __C.OS_dispatch_queue) -> Combine.AnyPublisher<A, Swift.Never>","executableLines":5},{"coveredLines":3,"lineCoverage":1,"lineNumber":39,"executionCount":13,"name":"closure #1 ((Combine.AnyPublisher<A, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never>) -> Combine.AnyPublisher<B, Swift.Never> in closure #1 (Combine.CurrentValueSubject<A, Swift.Never>) -> Combine.Publishers.MergeMany<Combine.AnyPublisher<B, Swift.Never>> in FeedbackLoop.FeedbackLoop.execute(initialState: A, on: __C.OS_dispatch_queue) -> Combine.AnyPublisher<A, Swift.Never>","executableLines":3},{"coveredLines":3,"lineCoverage":1,"lineNumber":46,"executionCount":34,"name":"closure #2 (A) -> () in FeedbackLoop.FeedbackLoop.execute(initialState: A, on: __C.OS_dispatch_queue) -> Combine.AnyPublisher<A, Swift.Never>","executableLines":3}],"name":"FeedbackLoop.swift","executableLines":34}],"name":"FeedbackLoop.framework","executableLines":80,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/FeedbackLoop.framework/FeedbackLoop"},{"coveredLines":66,"lineCoverage":0.95652173913043481,"files":[{"coveredLines":66,"lineCoverage":0.95652173913043481,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Sources/FeedbackLoopSwiftUI/SwiftUIContext.swift","functions":[{"coveredLines":1,"lineCoverage":1,"lineNumber":24,"executionCount":9,"name":"variable initialization expression of FeedbackLoopSwiftUI.SwiftUIContext.subscriptions : Swift.Set<Combine.AnyCancellable>","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":25,"executionCount":9,"name":"variable initialization expression of FeedbackLoopSwiftUI.SwiftUIContext.events : Combine.PassthroughSubject<B, Swift.Never>","executableLines":1},{"coveredLines":13,"lineCoverage":1,"lineNumber":27,"executionCount":3,"name":"closure #1 () -> Combine.AnyPublisher<A, Swift.Never> in FeedbackLoopSwiftUI.SwiftUIContext.stream.getter : Combine.AnyPublisher<A, Swift.Never>","executableLines":13},{"coveredLines":3,"lineCoverage":1,"lineNumber":32,"executionCount":3,"name":"closure #2 () -> Combine.AnyPublisher<B, Swift.Never> in closure #1 () -> Combine.AnyPublisher<A, Swift.Never> in FeedbackLoopSwiftUI.SwiftUIContext.stream.getter : Combine.AnyPublisher<A, Swift.Never>","executableLines":3},{"coveredLines":11,"lineCoverage":1,"lineNumber":43,"executionCount":9,"name":"FeedbackLoopSwiftUI.SwiftUIContext.init(feedbackLoop: FeedbackLoop.FeedbackLoop<A, B>, initialState: A, filterDistinct: Swift.Bool) -> FeedbackLoopSwiftUI.SwiftUIContext<A, B>","executableLines":11},{"coveredLines":5,"lineCoverage":1,"lineNumber":56,"executionCount":6,"name":"FeedbackLoopSwiftUI.SwiftUIContext.__allocating_init(initialState: A, filterDistinct: Swift.Bool) -> FeedbackLoopSwiftUI.SwiftUIContext<A, B>","executableLines":5},{"coveredLines":0,"lineCoverage":0,"lineNumber":57,"executionCount":0,"name":"closure #1 (A, B) -> A in FeedbackLoopSwiftUI.SwiftUIContext.init(initialState: A, filterDistinct: Swift.Bool) -> FeedbackLoopSwiftUI.SwiftUIContext<A, B>","executableLines":1},{"coveredLines":3,"lineCoverage":1,"lineNumber":62,"executionCount":2,"name":"FeedbackLoopSwiftUI.SwiftUIContext.subscribe() -> Combine.AnyCancellable","executableLines":3},{"coveredLines":0,"lineCoverage":0,"lineNumber":63,"executionCount":0,"name":"closure #1 (Combine.Subscribers.Completion<Swift.Never>) -> () in FeedbackLoopSwiftUI.SwiftUIContext.subscribe() -> Combine.AnyCancellable","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":63,"executionCount":4,"name":"closure #2 (A) -> () in FeedbackLoopSwiftUI.SwiftUIContext.subscribe() -> Combine.AnyCancellable","executableLines":1},{"coveredLines":3,"lineCoverage":1,"lineNumber":66,"executionCount":1,"name":"FeedbackLoopSwiftUI.SwiftUIContext.start() -> ()","executableLines":3},{"coveredLines":4,"lineCoverage":1,"lineNumber":70,"executionCount":10,"name":"FeedbackLoopSwiftUI.SwiftUIContext.render(state: A) -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":71,"executionCount":8,"name":"implicit closure #1 () throws -> Swift.Bool in FeedbackLoopSwiftUI.SwiftUIContext.render(state: A) -> ()","executableLines":1},{"coveredLines":3,"lineCoverage":1,"lineNumber":75,"executionCount":6,"name":"FeedbackLoopSwiftUI.SwiftUIContext.emit(B) -> ()","executableLines":3},{"coveredLines":4,"lineCoverage":1,"lineNumber":79,"executionCount":2,"name":"FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>, event: (A1) -> B) -> SwiftUI.Binding<A1>","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":80,"executionCount":4,"name":"closure #1 () -> A1 in FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>, event: (A1) -> B) -> SwiftUI.Binding<A1>","executableLines":1},{"coveredLines":5,"lineCoverage":1,"lineNumber":84,"executionCount":1,"name":"FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>, event: B) -> SwiftUI.Binding<A1>","executableLines":5},{"coveredLines":3,"lineCoverage":1,"lineNumber":85,"executionCount":1,"name":"closure #1 (A1) -> B in FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>, event: B) -> SwiftUI.Binding<A1>","executableLines":3},{"coveredLines":3,"lineCoverage":1,"lineNumber":90,"executionCount":1,"name":"FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>) -> SwiftUI.Binding<A1>","executableLines":3},{"coveredLines":1,"lineCoverage":1,"lineNumber":91,"executionCount":3,"name":"closure #1 () -> A1 in FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>) -> SwiftUI.Binding<A1>","executableLines":1},{"coveredLines":0,"lineCoverage":0,"lineNumber":91,"executionCount":0,"name":"closure #2 (A1) -> () in FeedbackLoopSwiftUI.SwiftUIContext.binding<A>(for: Swift.KeyPath<A, A1>) -> SwiftUI.Binding<A1>","executableLines":1}],"name":"SwiftUIContext.swift","executableLines":69}],"name":"FeedbackLoopSwiftUI.framework","executableLines":69,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/FeedbackLoopSwiftUI.framework/FeedbackLoopSwiftUI"},{"coveredLines":3,"lineCoverage":1,"files":[{"coveredLines":3,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Sources/Tools/ScopeFunctions/HasScopeFunctions.swift","functions":[{"coveredLines":3,"lineCoverage":1,"lineNumber":11,"executionCount":8,"name":"(extension in Tools):Tools.HasScopeFunctions.let<A>((A) -> A1) -> A1","executableLines":3}],"name":"HasScopeFunctions.swift","executableLines":3}],"name":"Tools.framework","executableLines":3,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/Tools.framework/Tools"},{"coveredLines":301,"lineCoverage":0.99668874172185429,"files":[{"coveredLines":3,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/FeedbackLoopSwiftUITests/TestState.swift","functions":[{"coveredLines":3,"lineCoverage":1,"lineNumber":14,"executionCount":7,"name":"FeedbackLoopSwiftUITests.TestState.isInitial.getter : Swift.Bool","executableLines":3}],"name":"TestState.swift","executableLines":3},{"coveredLines":298,"lineCoverage":0.99665551839464883,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/FeedbackLoopSwiftUITests/SwiftUIContextTests.swift","functions":[{"coveredLines":1,"lineCoverage":1,"lineNumber":16,"executionCount":9,"name":"variable initialization expression of FeedbackLoopSwiftUITests.SwiftUIContextTests.(subscriptions in _36916CF3CC1ABF1D8B5DB026E5D86D76) : Swift.Array<Combine.AnyCancellable>","executableLines":1},{"coveredLines":30,"lineCoverage":1,"lineNumber":18,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":30},{"coveredLines":4,"lineCoverage":1,"lineNumber":25,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestEvent) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":4},{"coveredLines":4,"lineCoverage":1,"lineNumber":31,"executionCount":1,"name":"closure #2 (Swift.Bool) -> FeedbackLoopSwiftUITests.TestEvent in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":37,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":37,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":45,"executionCount":1,"name":"implicit closure #3 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":45,"executionCount":1,"name":"implicit closure #4 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":46,"executionCount":1,"name":"implicit closure #5 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":46,"executionCount":1,"name":"implicit closure #6 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_receive_the_good_substate_and_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":25,"lineCoverage":1,"lineNumber":49,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":25},{"coveredLines":4,"lineCoverage":1,"lineNumber":55,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestEvent) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":64,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":64,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":72,"executionCount":1,"name":"implicit closure #3 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":72,"executionCount":1,"name":"implicit closure #4 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_emit_an_event_when_the_binding_is_mutated() -> ()","executableLines":1},{"coveredLines":16,"lineCoverage":1,"lineNumber":75,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_wrap_the_good_subState() -> ()","executableLines":16},{"coveredLines":1,"lineCoverage":1,"lineNumber":83,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_wrap_the_good_subState() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":83,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_wrap_the_good_subState() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":89,"executionCount":1,"name":"implicit closure #3 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_wrap_the_good_subState() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":89,"executionCount":1,"name":"implicit closure #4 () throws -> Swift.Bool in FeedbackLoopSwiftUITests.SwiftUIContextTests.test_binding_wrap_the_good_subState() -> ()","executableLines":1},{"coveredLines":20,"lineCoverage":1,"lineNumber":92,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testEmitEvents_emit_send_events_in_the_eventStream() -> ()","executableLines":20},{"coveredLines":4,"lineCoverage":1,"lineNumber":99,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestEvent) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testEmitEvents_emit_send_events_in_the_eventStream() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":110,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testEmitEvents_emit_send_events_in_the_eventStream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":110,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Optional<FeedbackLoopSwiftUITests.TestEvent> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testEmitEvents_emit_send_events_in_the_eventStream() -> ()","executableLines":1},{"coveredLines":21,"lineCoverage":1,"lineNumber":113,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_distinct_states() -> ()","executableLines":21},{"coveredLines":4,"lineCoverage":1,"lineNumber":120,"executionCount":1,"name":"closure #1 (Swift.Array<FeedbackLoopSwiftUITests.TestState>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_distinct_states() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":132,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_distinct_states() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":132,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_distinct_states() -> ()","executableLines":1},{"coveredLines":21,"lineCoverage":1,"lineNumber":135,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_whatever_states() -> ()","executableLines":21},{"coveredLines":4,"lineCoverage":1,"lineNumber":142,"executionCount":1,"name":"closure #1 (Swift.Array<FeedbackLoopSwiftUITests.TestState>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_whatever_states() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":154,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_whatever_states() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":154,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testRender_update_publishedState_with_whatever_states() -> ()","executableLines":1},{"coveredLines":29,"lineCoverage":1,"lineNumber":157,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":29},{"coveredLines":3,"lineCoverage":1,"lineNumber":161,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestState, FeedbackLoopSwiftUITests.TestEvent) -> FeedbackLoopSwiftUITests.TestState in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":3},{"coveredLines":4,"lineCoverage":1,"lineNumber":170,"executionCount":1,"name":"closure #2 (Swift.Array<FeedbackLoopSwiftUITests.TestState>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":4},{"coveredLines":0,"lineCoverage":0,"lineNumber":176,"executionCount":0,"name":"closure #3 (Combine.Subscribers.Completion<Swift.Never>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":176,"executionCount":2,"name":"closure #4 (FeedbackLoopSwiftUITests.TestState) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":184,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":184,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStream_make_a_stream_with_a_uiSideEffect_involving_renderState_andEventStream() -> ()","executableLines":1},{"coveredLines":29,"lineCoverage":1,"lineNumber":187,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testSubscribe_subscribe_to_the_state_stream() -> ()","executableLines":29},{"coveredLines":3,"lineCoverage":1,"lineNumber":191,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestState, FeedbackLoopSwiftUITests.TestEvent) -> FeedbackLoopSwiftUITests.TestState in FeedbackLoopSwiftUITests.SwiftUIContextTests.testSubscribe_subscribe_to_the_state_stream() -> ()","executableLines":3},{"coveredLines":4,"lineCoverage":1,"lineNumber":200,"executionCount":1,"name":"closure #2 (Swift.Array<FeedbackLoopSwiftUITests.TestState>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testSubscribe_subscribe_to_the_state_stream() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":214,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testSubscribe_subscribe_to_the_state_stream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":214,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testSubscribe_subscribe_to_the_state_stream() -> ()","executableLines":1},{"coveredLines":32,"lineCoverage":1,"lineNumber":217,"executionCount":1,"name":"FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":32},{"coveredLines":3,"lineCoverage":1,"lineNumber":221,"executionCount":1,"name":"closure #1 (FeedbackLoopSwiftUITests.TestState, FeedbackLoopSwiftUITests.TestEvent) -> FeedbackLoopSwiftUITests.TestState in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":3},{"coveredLines":4,"lineCoverage":1,"lineNumber":230,"executionCount":1,"name":"closure #2 (Swift.Array<FeedbackLoopSwiftUITests.TestState>) -> () in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":239,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Int in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":239,"executionCount":1,"name":"implicit closure #2 () throws -> Swift.Int in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":247,"executionCount":1,"name":"implicit closure #3 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":1},{"coveredLines":1,"lineCoverage":1,"lineNumber":247,"executionCount":1,"name":"implicit closure #4 () throws -> Swift.Array<FeedbackLoopSwiftUITests.TestState> in FeedbackLoopSwiftUITests.SwiftUIContextTests.testStart_subscribe_and_manage_subscription_to_the_state_stream() -> ()","executableLines":1}],"name":"SwiftUIContextTests.swift","executableLines":299}],"name":"FeedbackLoopSwiftUITests.xctest","executableLines":302,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/FeedbackLoopSwiftUITests.xctest/FeedbackLoopSwiftUITests"},{"coveredLines":40,"lineCoverage":1,"files":[{"coveredLines":20,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/ToolsTests/ScopeFunctions/NSObject+HasScopeFunctionsTests.swift","functions":[{"coveredLines":15,"lineCoverage":1,"lineNumber":13,"executionCount":1,"name":"ToolsTests.NSObject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":15},{"coveredLines":4,"lineCoverage":1,"lineNumber":20,"executionCount":1,"name":"closure #1 (__C.NSObject) -> Swift.Int in ToolsTests.NSObject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":26,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Bool in ToolsTests.NSObject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":1}],"name":"NSObject+HasScopeFunctionsTests.swift","executableLines":20},{"coveredLines":20,"lineCoverage":1,"path":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Tests/ToolsTests/ScopeFunctions/CurrentValueSubject+HasScopeFunctionsTests.swift","functions":[{"coveredLines":15,"lineCoverage":1,"lineNumber":14,"executionCount":1,"name":"ToolsTests.CurrentValueSubject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":15},{"coveredLines":4,"lineCoverage":1,"lineNumber":21,"executionCount":1,"name":"closure #1 (Combine.CurrentValueSubject<(), Swift.Never>) -> Swift.Int in ToolsTests.CurrentValueSubject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":4},{"coveredLines":1,"lineCoverage":1,"lineNumber":27,"executionCount":1,"name":"implicit closure #1 () throws -> Swift.Bool in ToolsTests.CurrentValueSubject_HasScopeFunctionsTests.test_let_executes_the_block() throws -> ()","executableLines":1}],"name":"CurrentValueSubject+HasScopeFunctionsTests.swift","executableLines":20}],"name":"ToolsTests.xctest","executableLines":40,"buildProductPath":"/Users/twittemberg/Development/Genetec/iOS-FeedbackLoop/Build/Build/Products/Debug-iphonesimulator/ToolsTests.xctest/ToolsTests"}],"executableLines":666}
"""
